# -*- coding: utf-8 -*-
"""Dashboard.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12aaniH3K96aqg9doNY0wjnN-GeqmyFdz
"""

!pip install streamlit gnews transformers torch

import streamlit as st
from gnews import GNews
from transformers import pipeline
import datetime

# 1. Setup GNews client
news = GNews(language='en', country='in', max_results=30)

# 2. Finance-related keywords
finance_keywords = [
    "stock market", "NSE", "BSE", "Sensex", "Nifty",
    "RBI", "banking", "earnings", "IPO", "finance",
    "quarterly results", "dividend", "merger", "acquisition"
]

# 3. Load FinBERT sentiment model
finbert = pipeline("sentiment-analysis", model="yiyanghkust/finbert-tone", tokenizer="yiyanghkust/finbert-tone")

def get_sentiment_finbert(text):
    try:
        result = finbert(text[:512])[0]  # truncate to 512 tokens
        return result['label']   # 'positive', 'negative', 'neutral'
    except Exception as e:
        return f"Error: {e}"

# -------- Streamlit Dashboard --------
st.set_page_config(page_title="Finance News Dashboard", layout="wide")

st.title("ðŸ“Š Finance News Sentiment Dashboard")

today = datetime.date.today().strftime("%d-%m-%Y")
st.subheader(f"News Digest for {today}")

# Fetch all articles
all_articles = []
for keyword in finance_keywords:
    try:
        articles = news.get_news(keyword)
        if articles:
            all_articles.extend(articles)
    except Exception as e:
        st.warning(f"Error fetching for {keyword}: {e}")

# Remove duplicates
unique_articles = {article['title']: article for article in all_articles}
articles_list = list(unique_articles.values())

# Display news in dashboard
for idx, article in enumerate(articles_list[:20], start=1):
    title = article['title']
    source = article['publisher']['title'] if article.get('publisher') else "Unknown"
    url = article['url']
    sentiment = get_sentiment_finbert(title)

    with st.container():
        st.markdown(f"### {idx}. [{title}]({url})")
        st.write(f"**Source:** {source}")
        st.write(f"**Sentiment:** {sentiment}")
        st.divider()